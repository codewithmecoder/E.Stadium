<?xml version="1.0"?>
<doc>
    <assembly>
        <name>E.Stadium.Api</name>
    </assembly>
    <members>
        <member name="M:E.Stadium.Api.Controllers.V1.FieldController.CreateAsync(System.Guid,E.Stadium.Core.Dto.Fields.CreateFieldDto)">
            <summary>
            Create Field base on stadium
            </summary>
            <param name="stadiumId"></param>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.FieldController.GetByIdAsync(System.Guid)">
            <summary>
            Get by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.FieldController.GetBaseOnStadiumAsync(System.Guid,E.Stadium.Core.Dto.Base.BasePaginateDto)">
            <summary>
            Get base stadium
            </summary>
            <param name="staduimid"></param>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.FieldController.UpdateFieldAsync(System.Guid,System.Guid,E.Stadium.Core.Dto.Fields.UpdateFieldDto)">
            <summary>
            update by id and stadium id
            </summary>
            <param name="id"></param>
            <param name="stadiumId"></param>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.FieldController.DaleteFieldAsync(System.Guid)">
            <summary>
            Delete Field
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.StadiumController.CreateStadium(E.Stadium.Core.Dto.Stadiums.CreateStadiumDto)">
            <summary>
            Create Stadium
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.StadiumController.GetStadiumAsync(System.Guid)">
            <summary>
            get stadium by id and base on user login
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.StadiumController.GetStadiumAsync(System.String,E.Stadium.Core.Dto.Base.BasePaginateDto)">
            <summary>
            get all active stadium
            </summary>
            <param name="filter"></param>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.StadiumController.GetStadiumByUserAsync(System.String,E.Stadium.Core.Dto.Base.BasePaginateDto)">
            <summary>
            get all active stadium base on user login
            </summary>
            <param name="filter"></param>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.StadiumController.UpdateStadiumAsync(System.Guid,E.Stadium.Core.Dto.Stadiums.UpdateStadiumDto)">
            <summary>
            update Stadium by id
            </summary>
            <param name="id"></param>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.StadiumController.DaleteFieldAsync(System.Guid)">
            <summary>
            Delete stadium
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.SignUpAsync(E.Stadium.Core.Dto.Users.SignUpDto)">
            <summary>
            sign a user 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.LoginAsync(E.Stadium.Core.Dto.Users.LoginDto)">
            <summary>
            login user in 
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.Get">
            <summary>
            get loged-in user information
            </summary>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.GetAllUsersAsync(System.Boolean,E.Stadium.Core.Dto.Base.BasePaginateDto)">
            <summary>
            get all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.Put(E.Stadium.Core.Dto.Users.UpdateUserDto)">
            <summary>
            update user
            </summary>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.InOrActiveUserAsync(System.Guid,System.Boolean)">
            <summary>
            active and inactive user
            </summary>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.UpdateToStadiumRental">
            <summary>
            update normal user to stadium rental
            </summary>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.Delete(E.Stadium.Core.Dto.Users.DeleteUserDto)">
            <summary>
            delete user
            </summary>
            <returns></returns>
        </member>
        <member name="M:E.Stadium.Api.Controllers.V1.UserController.ChangePasswordAsync(E.Stadium.Core.Dto.Users.ChangePasswordDto)">
            <summary>
            change password
            </summary>
            <param name="dto"></param>
            <returns></returns>
        </member>
    </members>
</doc>
